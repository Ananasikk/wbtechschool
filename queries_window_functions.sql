-- –ß–ê–°–¢–¨ 1
-- –í—ã–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –∏–º–µ–Ω–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –ø–æ–ª—É—á–∞—é—â–∏–º–∏ —Å–∞–º—É—é –≤—ã—Å–æ–∫—É—é –∑–∞—Ä–ø–ª–∞—Ç—É –≤ –æ—Ç–¥–µ–ª–µ. 
-- –°—Ç–æ–ª–±—Ü—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ: first_name, last_name, salary, industry, name_ighest_sal. 
-- –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–æ–ª–±–µ—Ü - –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞ —Å —Å–∞–º–æ–π –≤—ã—Å–æ–∫–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π.
-- –í—ã–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫, –Ω–æ —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π.
-- –í –∫–∞–∂–¥–æ–º —Å–ª—É—á–∞–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–∞—Å—á–µ—Ç –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏: —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–π min max (–±–µ–∑ –æ–∫–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π) –∏ 
-- —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º first/last value

-- –∑–∞–ø—Ä–æ—Å —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π
with max_salary_by_industry as (
	select distinct on(industry)
		industry,
		first_name || ' ' || last_name as full_name
	from salary
	order by industry, salary desc
), min_salary_by_industry as (
	select distinct on(industry)
		industry,
		first_name || ' ' || last_name as full_name
	from salary
	order by industry, salary
)
select
	first_name,
	last_name,
	salary,
	industry,
	max_salary_by_industry.full_name as name_ighest_sal,
	min_salary_by_industry.full_name as name_lowest_sal
from salary
join max_salary_by_industry using(industry)
join min_salary_by_industry using(industry)


-- –∑–∞–ø—Ä–æ—Å —Å –æ–∫–æ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
select
	first_name,
	last_name,
	salary,
	industry,
	last_value(first_name || ' ' || last_name) over(partition by industry 
													order by salary RANGE BETWEEN
            										UNBOUNDED PRECEDING AND
            										UNBOUNDED FOLLOWING) as name_ighest_sal,
	first_value(first_name || ' ' || last_name) over(partition by industry 
													order by salary RANGE BETWEEN
            										UNBOUNDED PRECEDING AND
            										UNBOUNDED FOLLOWING) as name_lowest_sal
from salary


-- –ß–ê–°–¢–¨ 2
-- –û—Ç–±–µ—Ä–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∑–∞ 2.01.2016. –£–∫–∞–∂–∏—Ç–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –µ–≥–æ –∞–¥—Ä–µ—Å, —Å—É–º–º—É –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ —à—Ç—É–∫–∞—Ö, —Å—É–º–º—É –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ä—É–±–ª—è—Ö.
-- –°—Ç–æ–ª–±—Ü—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ: SHOPNUMBER , CITY , ADDRESS, SUM_QTY SUM_QTY_PRICE

select
	sales."SHOPNUMBER",
	"CITY",
	"ADDRESS",
	sum("QTY") as "SUM_QTY",
	sum("QTY" * "PRICE") as "SUM_QTY_PRICE"
from sales join shops using("SHOPNUMBER")
join goods using("ID_GOOD")
where "DATE" = '2016-01-02'::date
group by sales."SHOPNUMBER", "CITY", "ADDRESS"

-- –û—Ç–±–µ—Ä–∏—Ç–µ –∑–∞ –∫–∞–∂–¥—É—é –¥–∞—Ç—É –¥–æ–ª—é –æ—Ç —Å—É–º–º–∞—Ä–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂ (–≤ —Ä—É–±–ª—è—Ö –Ω–∞ –¥–∞—Ç—É). –†–∞—Å—á–µ—Ç—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ —Ç–æ–≤–∞—Ä–∞–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ß–ò–°–¢–û–¢–ê.
-- –°—Ç–æ–ª–±—Ü—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ: DATE_, CITY, SUM_SALES_REL

with sales_by_date as (
	select
		"DATE",
		"CITY",
		sum("QTY" * "PRICE") as "SUM_SALES"
	from sales join shops using("SHOPNUMBER")
	JOIN goods using("ID_GOOD")
	where "CATEGORY" = '–ß–ò–°–¢–û–¢–ê'
	group by "DATE", "CITY"
), total_sales as (
	select
		sum("QTY" * "PRICE") as "TOTAL_SUM_SALES"
  	from sales join shops using("SHOPNUMBER")
  	JOIN goods using("ID_GOOD")
  	where "CATEGORY" = '–ß–ò–°–¢–û–¢–ê'
) select 
	"DATE",
	"CITY",
	"SUM_SALES"/"TOTAL_SUM_SALES" as "SUM_SALES_REL"
  from sales_by_date
  cross join total_sales
  order by 1,2

-- –í—ã–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–ø-3 —Ç–æ–≤–∞—Ä–∞—Ö –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –≤ —à—Ç—É–∫–∞—Ö –≤ –∫–∞–∂–¥–æ–º –º–∞–≥–∞–∑–∏–Ω–µ –≤ –∫–∞–∂–¥—É—é –¥–∞—Ç—É.
-- –°—Ç–æ–ª–±—Ü—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ: DATE_ , SHOPNUMBER, ID_GOOD

with sum_sales_by_good_shop_date as (
	select
		"DATE",
		"ID_GOOD",
		"SHOPNUMBER",
		sum("QTY") as sum_sales
	from sales join shops using("SHOPNUMBER")
	JOIN goods using("ID_GOOD")
	where "CATEGORY" = '–ß–ò–°–¢–û–¢–ê'
	group by "DATE", "SHOPNUMBER", "ID_GOOD"
	order by "SHOPNUMBER", "ID_GOOD", "DATE"
) select
	"DATE",
	"SHOPNUMBER",
	"ID_GOOD"
from (
	select 
		"DATE",
		"ID_GOOD",
		"SHOPNUMBER",
		sum_sales,
		row_number() over(partition by "SHOPNUMBER", "DATE" ORDER BY sum_sales desc) as rn
  	 from sum_sales_by_good_shop_date) q
where rn between 1 and 3

-- –í—ã–≤–µ–¥–∏—Ç–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—É–º–º—É –ø—Ä–æ–¥–∞–∂ –≤ —Ä—É–±–ª—è—Ö –∑–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é –¥–∞—Ç—É. –¢–æ–ª—å–∫–æ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–æ–≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞.
-- –°—Ç–æ–ª–±—Ü—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ: DATE_, SHOPNUMBER, CATEGORY, PREV_SALES
with cte as (
	select
		"DATE",
		"SHOPNUMBER",
		"CATEGORY",
		sum("QTY" * "PRICE") as sum_sales
	from sales join shops using("SHOPNUMBER")
	JOIN goods using("ID_GOOD")
	where "CITY" = '–°–ü–±'
	group by "DATE", "SHOPNUMBER", "CATEGORY")
select 
	"DATE",
	"SHOPNUMBER",
	"CATEGORY",
	coalesce(lag(sum_sales) OVER(PARTITION BY "SHOPNUMBER", "CATEGORY" ORDER BY "DATE"), 0) as "PREV_SALES"
from cte

-- –ß–ê–°–¢–¨ 3
-- –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É query (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ - –ø–æ—Ä—è–¥–∫–∞ 20) —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ.
-- –ü–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ: searchid, year, month, day, userid, ts, devicetype, deviceid, query. ts- –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ unix.
-- üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—é —Å—Ç–æ–ª–±—Ü–∞ query: –ó–∞–Ω–æ—Å–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã. –ù–∞–ø—Ä–∏–º–µ—Ä, –∫, –∫—É, –∫—É–ø, –∫—É–ø–∏—Ç—å, –∫—É–ø–∏—Ç—å –∫—É—Ä, –∫—É–ø–∏—Ç—å –∫—É—Ä—Ç–∫—É.
-- –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ is_final:
-- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–±–∏–ª –∑–∞–ø—Ä–æ—Å (—Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞), –∏ –ø–æ—Å–ª–µ –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ –∏—Å–∫–∞–ª, —Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ 1
-- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–±–∏–ª –∑–∞–ø—Ä–æ—Å (—Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞), –∏ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 3—Ö –º–∏–Ω—É—Ç, —Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–∫–∂–µ —Ä–∞–≤–Ω–æ 1
-- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–±–∏–ª –∑–∞–ø—Ä–æ—Å (—Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞), –ò —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –±—ã–ª –∫–æ—Ä–æ—á–µ, –ò –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—à–ª–æ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ –º–∏–Ω—É—Ç—ã, —Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ 2
-- –ò–Ω–∞—á–µ - –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ 0

CREATE TABLE query (
    searchid serial PRIMARY KEY ,
    year INT,
    month INT,
    day INT,
    userid INT,
    ts INT,
    devicetype VARCHAR(50),
    deviceid VARCHAR(50),
    query VARCHAR(255),
    is_final INT
);

INSERT INTO query (year, month, day, userid, ts, devicetype, deviceid, query)
VALUES
    (2024, 11, 3, 101, 1698998400, 'ios', 'device_001', '–∫'),
    (2024, 11, 3, 101, 1698998460, 'ios', 'device_001', '–∫—É'),
    (2024, 11, 3, 101, 1698998520, 'ios', 'device_001', '–∫—É–ø'),
    (2024, 11, 3, 101, 1698998580, 'ios', 'device_001', '–∫—É–ø–∏—Ç—å'),
    (2024, 11, 3, 101, 1698998640, 'ios', 'device_001', '–∫—É–ø–∏—Ç—å –∫—É—Ä'),
    (2024, 11, 3, 101, 1698998700, 'ios', 'device_001', '–∫—É–ø–∏—Ç—å –∫—É—Ä—Ç–∫—É'),
    (2024, 11, 3, 102, 1698998800, 'desktop', 'device_002', '—Å—É–º'),
    (2024, 11, 3, 102, 1698998810, 'desktop', 'device_002', '—Å—É–º–∫–∏'),
    (2024, 11, 3, 102, 1698998820, 'desktop', 'device_002', '—Å—É–º–∫–∞'),
    (2024, 11, 3, 102, 1698998880, 'desktop', 'device_002', '—Å—É–º–∫–∞ –∫–æ–∂–∞'),
    (2024, 11, 3, 102, 1698998940, 'desktop', 'device_002', '—Å—É–º–∫–∞ –∫–æ–∂–∞ —á–µ—Ä–Ω–∞—è'),
    (2024, 11, 3, 103, 1698999000, 'android', 'device_003', '—á–∞—Å—ã'),
    (2024, 11, 3, 103, 1698999060, 'android', 'device_003', '—á–∞—Å—ã –∂–µ–Ω—Å–∫–∏–µ'),
    (2024, 11, 3, 103, 1698999120, 'android', 'device_003', '—á–∞—Å—ã –∂–µ–Ω—Å–∫–∏–µ —Å–∏–Ω–∏–π'),
    (2024, 11, 3, 103, 1698999180, 'android', 'device_003', '—á–∞—Å—ã –∂–µ–Ω—Å–∫–∏–µ —Å–∏–Ω–∏–π –∫–æ–∂–∞–Ω—ã–π —Ä–µ–º–µ–Ω—å'),
    (2024, 11, 3, 103, 1698999245, 'android', 'device_003', '–∫'),
    (2024, 11, 3, 103, 1698999260, 'android', 'device_003', '–∫–æ—Ä–º'),
    (2024, 11, 3, 103, 1698999555, 'android', 'device_003', '–Ω–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä'),
    (2024, 11, 3, 104, 1698999240, 'android', 'device_004', '—Ç–µ–ª–µ–≤–∏–∑–æ—Ä'),
    (2024, 11, 3, 104, 1698999300, 'android', 'device_004', '—Ç–µ–ª–µ–≤–∏–∑–æ—Ä LG'),
    (2024, 11, 3, 104, 1698999360, 'android', 'device_004', '—Ç–µ–ª–µ–≤–∏–∑–æ—Ä LG 55'),
    (2024, 11, 3, 104, 1698999420, 'android', 'device_004', '—Ç–µ–ª–µ–≤–∏–∑–æ—Ä LG 55 –¥—é–π–º–æ–≤'),
    (2024, 11, 3, 105, 1698999480, 'desktop', 'device_005', '–Ω–æ—É—Ç–±—É–∫'),
    (2024, 11, 3, 105, 1698999540, 'desktop', 'device_005', '–Ω–æ—É—Ç–±—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã');

-- –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ final
with main as (
	select
        searchid,
		userid,
		deviceid,
		ts,
		query,
		lead(ts) over(partition by userid, deviceid order by ts) - ts as delta_next_ts,
		length(query) as len_query,
		lead(length(query)) over(partition by userid, deviceid order by ts) as len_next_query
	from query
), final_calculation as (
	select *,
		case 
			when delta_next_ts is null then 1
			when delta_next_ts > 60*3 then 1
			when len_query > len_next_query and delta_next_ts > 60 then 2
			else 0 
		end as final
	from main)
update query set is_final = final_calculation.final 
from final_calculation
where query.searchid = final_calculation.searchid

-- –í—ã–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–ø—Ä–æ—Å–∞—Ö –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å (–≤—ã–±–µ—Ä–∏—Ç–µ —Å–∞–º–∏), —É –∫–æ—Ç–æ—Ä—ã—Ö is_final –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ android —Ä–∞–≤–µ–Ω 1 –∏–ª–∏ 2.
-- –°—Ç–æ–ª–±—Ü—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ:
--  `year`, `month`, `day`, `userid`, `ts` , `devicetype`, `deviceid` , `query`, `next_query`, `is_final`

select 
	year, 
	month, 
	day, 
	userid, 
	ts, 
	devicetype, 
	deviceid, 
	query, 
	lead(query) over(partition by userid, deviceid order by ts) as next_query, 
	is_final
from query
where year=2024 and month=11 and day=3 and devicetype='android' and is_final in (1,2)